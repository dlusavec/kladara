/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package kladara;

import java.awt.Color;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.util.Date;
import javax.swing.JFormattedTextField;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import pojo.Tipster;
import pomocni.ExportUExcel;
import pomocni.Pomocna;
import pomocni.PomocnaBaza;
import pomocni.Poruka;

/**
 *
 * @author damirl
 */
public class RekapitulacijaMjesecPregled extends javax.swing.JDialog {

    /**
     * Creates new form TipseriPregled
     */
    String selectSQL = "";

    public RekapitulacijaMjesecPregled(Component parent, boolean modal) {
        super();
        initComponents();
        setLocationRelativeTo(parent);
        tablica.setRowCountSql(null);
        postavkeParametri();
        napraviSelectSQL();
        try {
            tablica.refresh();
            totalSQL();
            postavkeTablica();
        } catch (SQLException ex) {
            Poruka.greska(this, ex.getMessage());
        }        
        this.getRootPane().setDefaultButton(jButtonOK);
        Pomocna.postavkeProzora(this,jFormattedTextFieldDatumOd);
        setVisible(true);
        lokacijaPoljaTotala();
        setModal(modal);
        tablica.selectCell(0, 0, true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tablica = new quick.dbtable.DBTable();
        jPanel1 = new javax.swing.JPanel();
        jButtonLista = new javax.swing.JButton();
        jButtonDetalj = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jFormattedTextFieldDatumOd = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        jFormattedTextFieldDatumDo = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jFormattedTextFieldTipster = new javax.swing.JFormattedTextField();
        jTextFieldTipsterNaziv = new javax.swing.JTextField();
        jComboBoxIgram = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jButtonOK = new javax.swing.JButton();
        jButtonIzlaz = new javax.swing.JButton();
        jFormattedTextFieldSUlog = new javax.swing.JFormattedTextField();
        jFormattedTextFieldSSaldo = new javax.swing.JFormattedTextField();
        jFormattedTextFieldSOsvojeno = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        jFormattedTextFieldSTiketa = new javax.swing.JFormattedTextField();
        jFormattedTextFieldSDobitno = new javax.swing.JFormattedTextField();
        jFormattedTextFieldSGubitno = new javax.swing.JFormattedTextField();
        jFormattedTextFieldSROI = new javax.swing.JFormattedTextField();

        setTitle("Rekapitulacija - Mjesec");
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(1100, 600));
        setResizable(false);

        tablica.setConnection(Konekcija.konekcija);
        tablica.setMaximumSize(new java.awt.Dimension(1100, 600));
        tablica.setMinimumSize(new java.awt.Dimension(1100, 400));
        tablica.setPreferredSize(new java.awt.Dimension(1100, 500));
        tablica.setSelectSql("SELECT B.ID AS Id, b.Naziv as Naziv,SUM(A.ULOG) as UloÅ¾eno, SUM(A.Saldo) AS Saldo, ROUND(SUM(A.SALDO)/SUM(A.ULOG)*100,2) AS ROI,\nROUND(AVG(ULOG),2) as Prosj_ulog,ROUND(SUM(SALDO)/AVG(ULOG),2) as Osvojio_uloga,\nCOUNT(*) as Tiketa, SUM(CASE A.STATUS_ID WHEN 1 THEN 1 ELSE 0 END) AS Dobitno,SUM(CASE A.STATUS_ID WHEN 2 THEN 1 ELSE 0 END) AS Gubitno\nFROM PROMET A\nINNER JOIN TIPSTER B ON B.ID=a.TIPSTER_ID\nWHERE A.DATUM>='2012-09-01' and STATUS_ID IN(1,2)\nGROUP BY B.ID,B.NAZIV \nORDER BY Naziv");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        jPanel1.setMaximumSize(new java.awt.Dimension(1100, 56));
        jPanel1.setMinimumSize(new java.awt.Dimension(1100, 56));
        jPanel1.setPreferredSize(new java.awt.Dimension(1100, 56));

        jButtonLista.setMnemonic('L');
        jButtonLista.setText("Lista");
        jButtonLista.setMaximumSize(new java.awt.Dimension(80, 30));
        jButtonLista.setMinimumSize(new java.awt.Dimension(80, 30));
        jButtonLista.setPreferredSize(new java.awt.Dimension(80, 30));
        jButtonLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListaActionPerformed(evt);
            }
        });

        jButtonDetalj.setMnemonic('D');
        jButtonDetalj.setText("Detalj");
        jButtonDetalj.setMaximumSize(new java.awt.Dimension(80, 30));
        jButtonDetalj.setMinimumSize(new java.awt.Dimension(80, 30));
        jButtonDetalj.setPreferredSize(new java.awt.Dimension(80, 30));
        jButtonDetalj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDetaljActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonDetalj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDetalj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        jPanel2.setMaximumSize(new java.awt.Dimension(1100, 80));
        jPanel2.setMinimumSize(new java.awt.Dimension(1100, 80));
        jPanel2.setPreferredSize(new java.awt.Dimension(1100, 80));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 153));
        jLabel2.setText("Datum od");

        jFormattedTextFieldDatumOd.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        jFormattedTextFieldDatumOd.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jFormattedTextFieldDatumOd.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jFormattedTextFieldDatumOdFocusGained(evt);
            }
        });
        jFormattedTextFieldDatumOd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFormattedTextFieldDatumOdKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 153));
        jLabel3.setText("do");

        jFormattedTextFieldDatumDo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        jFormattedTextFieldDatumDo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jFormattedTextFieldDatumDo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jFormattedTextFieldDatumDoFocusGained(evt);
            }
        });
        jFormattedTextFieldDatumDo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFormattedTextFieldDatumDoKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Tipster");

        jFormattedTextFieldTipster.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("######"))));
        jFormattedTextFieldTipster.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jFormattedTextFieldTipster.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jFormattedTextFieldTipsterFocusGained(evt);
            }
        });
        jFormattedTextFieldTipster.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jFormattedTextFieldTipsterPropertyChange(evt);
            }
        });
        jFormattedTextFieldTipster.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFormattedTextFieldTipsterKeyPressed(evt);
            }
        });

        jTextFieldTipsterNaziv.setEditable(false);
        jTextFieldTipsterNaziv.setBackground(java.awt.SystemColor.controlHighlight);
        jTextFieldTipsterNaziv.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextFieldTipsterNaziv.setForeground(new java.awt.Color(0, 0, 153));
        jTextFieldTipsterNaziv.setFocusable(false);

        jComboBoxIgram.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBoxIgram.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBoxIgramKeyPressed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Igram");

        jButtonOK.setMnemonic('O');
        jButtonOK.setText("OK");
        jButtonOK.setMaximumSize(new java.awt.Dimension(80, 30));
        jButtonOK.setMinimumSize(new java.awt.Dimension(80, 30));
        jButtonOK.setPreferredSize(new java.awt.Dimension(80, 30));
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });

        jButtonIzlaz.setMnemonic('z');
        jButtonIzlaz.setText("Izlaz");
        jButtonIzlaz.setMaximumSize(new java.awt.Dimension(80, 30));
        jButtonIzlaz.setMinimumSize(new java.awt.Dimension(80, 30));
        jButtonIzlaz.setPreferredSize(new java.awt.Dimension(80, 30));
        jButtonIzlaz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIzlazActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jFormattedTextFieldDatumOd, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jFormattedTextFieldDatumDo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jFormattedTextFieldTipster, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldTipsterNaziv, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBoxIgram, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(127, 127, 127)
                .addComponent(jButtonOK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonIzlaz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jFormattedTextFieldDatumOd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(jFormattedTextFieldDatumDo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(jFormattedTextFieldTipster, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFieldTipsterNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(jComboBoxIgram, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonOK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonIzlaz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jFormattedTextFieldSUlog.setEditable(false);
        jFormattedTextFieldSUlog.setBackground(java.awt.SystemColor.controlHighlight);
        jFormattedTextFieldSUlog.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,###,##0.00"))));
        jFormattedTextFieldSUlog.setFocusable(false);
        jFormattedTextFieldSUlog.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jFormattedTextFieldSSaldo.setEditable(false);
        jFormattedTextFieldSSaldo.setBackground(java.awt.SystemColor.controlHighlight);
        jFormattedTextFieldSSaldo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,###,##0.00"))));
        jFormattedTextFieldSSaldo.setFocusable(false);
        jFormattedTextFieldSSaldo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jFormattedTextFieldSOsvojeno.setEditable(false);
        jFormattedTextFieldSOsvojeno.setBackground(java.awt.SystemColor.controlHighlight);
        jFormattedTextFieldSOsvojeno.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,###,##0.00"))));
        jFormattedTextFieldSOsvojeno.setFocusable(false);
        jFormattedTextFieldSOsvojeno.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Total");

        jFormattedTextFieldSTiketa.setEditable(false);
        jFormattedTextFieldSTiketa.setBackground(java.awt.SystemColor.controlHighlight);
        jFormattedTextFieldSTiketa.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,###,##0.00"))));
        jFormattedTextFieldSTiketa.setFocusable(false);
        jFormattedTextFieldSTiketa.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jFormattedTextFieldSDobitno.setEditable(false);
        jFormattedTextFieldSDobitno.setBackground(java.awt.SystemColor.controlHighlight);
        jFormattedTextFieldSDobitno.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,###,##0.00"))));
        jFormattedTextFieldSDobitno.setFocusable(false);
        jFormattedTextFieldSDobitno.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jFormattedTextFieldSGubitno.setEditable(false);
        jFormattedTextFieldSGubitno.setBackground(java.awt.SystemColor.controlHighlight);
        jFormattedTextFieldSGubitno.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,###,##0.00"))));
        jFormattedTextFieldSGubitno.setFocusable(false);
        jFormattedTextFieldSGubitno.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jFormattedTextFieldSROI.setEditable(false);
        jFormattedTextFieldSROI.setBackground(java.awt.SystemColor.controlHighlight);
        jFormattedTextFieldSROI.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00%"))));
        jFormattedTextFieldSROI.setFocusable(false);
        jFormattedTextFieldSROI.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tablica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addGap(160, 160, 160)
                .addComponent(jFormattedTextFieldSUlog, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jFormattedTextFieldSSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jFormattedTextFieldSROI, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(136, 136, 136)
                .addComponent(jFormattedTextFieldSOsvojeno, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jFormattedTextFieldSTiketa, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jFormattedTextFieldSDobitno, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jFormattedTextFieldSGubitno, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(tablica, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jFormattedTextFieldSSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jFormattedTextFieldSUlog, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jFormattedTextFieldSDobitno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jFormattedTextFieldSGubitno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jFormattedTextFieldSTiketa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jFormattedTextFieldSOsvojeno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jFormattedTextFieldSROI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void postavkeParametri() {
        jFormattedTextFieldDatumOd.setValue(Pomocna.getPocetakGodine(new Date()));
        jFormattedTextFieldDatumDo.setValue(new Date());
        Pomocna.igramUComboBox(jComboBoxIgram);
        jComboBoxIgram.setSelectedIndex(2);
    }

    private void postavkeTablica() {
        tablica.getTable().setAutoResizeMode(JTable.AUTO_RESIZE_SUBSEQUENT_COLUMNS);
        tablica.setEditable(false);
        //Kolone
        //Id
        tablica.getColumn(0).setMaxWidth(80);
        tablica.getColumn(0).setHeaderValue("Mjesec");
        //Tipster
        tablica.getColumn(1).setMinWidth(120);
        tablica.getColumn(1).setMaxWidth(120);
        tablica.getColumn(1).setHeaderValue("Naziv");
        //UloÅ¾eno
        tablica.getColumn(2).setMinWidth(100);
        tablica.getColumn(2).setMaxWidth(100);
        tablica.getColumn(2).setHeaderValue("UloÅ¾eno");
        //Saldo
        tablica.getColumn(3).setMinWidth(100);
        tablica.getColumn(3).setMaxWidth(100);
        tablica.getColumn(3).setHeaderValue("Saldo");
        //ROI
        tablica.getColumn(4).setHeaderValue("ROI %");
        tablica.getColumn(4).setMinWidth(100);
        tablica.getColumn(4).setMaxWidth(100);
        //Prosjecni ulog
        tablica.getColumn(5).setMinWidth(120);
        tablica.getColumn(5).setMaxWidth(120);
        tablica.getColumn(5).setHeaderValue("Prosj. ulog");
        //Osvojio uloga
        tablica.getColumn(6).setMinWidth(120);
        tablica.getColumn(6).setMaxWidth(120);
        tablica.getColumn(6).setHeaderValue("Osvojio uloga");
        //Tiketa
        tablica.getColumn(7).setMinWidth(80);
        tablica.getColumn(7).setMaxWidth(80);
        tablica.getColumn(7).setHeaderValue("Tiketa");
        //Dobitno
        tablica.getColumn(8).setHeaderValue("Dobitno");
        //Gubitno       
        tablica.getColumn(9).setHeaderValue("Gubitno");

        TablicaSkin skin = new TablicaSkin();
        tablica.setSkin(skin);
        Object put = UIManager.put("Table.gridColor", Color.black);

    }

    private void lokacijaPoljaTotala() {
        //  Point tocka = jFormattedTextFieldSUlog.getLocation();
        /*  jFormattedTextFieldSUlog.setLocation(200, tocka.y);
    
         jFormattedTextFieldSDobitak.setLocation(300, tocka.y);
      
         jFormattedTextFieldSOsvojeno.setLocation(620, tocka.y);
       
         jFormattedTextFieldSTiketa.setLocation(700, tocka.y);
       
         jFormattedTextFieldSDobitno.setLocation(800, tocka.y);
     
         jFormattedTextFieldSGubitno.setLocation(950, tocka.y);*/
    }

    private void napraviSelectSQL() {
        String sql = "SELECT CONCAT(FORMATDATETIME(A.Datum,'MM'),'/',FORMATDATETIME(A.Datum,'yyyy')) AS Mjesec, FORMATDATETIME(datum,'MMMM','hr') Naziv,SUM(A.ULOG) as UloÅ¾eno, SUM(A.Saldo) AS Saldo, ROUND(SUM(A.SALDO)/SUM(A.ULOG)*100,2) AS ROI,\n"
                + "ROUND(AVG(ULOG),2) as Prosj_ulog,ROUND(SUM(SALDO)/AVG(ULOG),2) as Osvojeno,\n"
                + "COUNT(*) as Tiketa, SUM(CASE A.STATUS_ID WHEN 1 THEN 1 ELSE 0 END) AS Dobitno,SUM(CASE A.STATUS_ID WHEN 2 THEN 1 ELSE 0 END) AS Gubitno\n"
                + "FROM PROMET A ";
        String where = "";
        //Where
        where = napraviWhereSQL();
        sql = sql + where;
        // Group by
        sql = sql + " GROUP BY CONCAT(FORMATDATETIME(A.Datum,'MM'),'/',FORMATDATETIME(A.Datum,'yyyy')) ,FORMATDATETIME(datum,'MMMM','hr') ";
        // Order by             
        sql = sql + " ORDER BY CONCAT(FORMATDATETIME(A.Datum,'MM'),'/',FORMATDATETIME(A.Datum,'yyyy')) ";
        tablica.setSelectSql(sql);
    }

    private void totalSQL() {
        try {
            String sql = "SELECT SUM(A.ULOG) as ULOG, SUM(A.Saldo) AS SALDO,\n"
                    + "ROUND(SUM(A.SALDO)/SUM(A.ULOG),4) ROI, \n"
                    + "ROUND(SUM(SALDO)/AVG(ULOG),2) as OSVOJENO, COUNT(*) as TIKETA, \n"
                    + "SUM(CASE A.STATUS_ID WHEN 1 THEN 1 ELSE 0 END) AS DOBITNO,\n"
                    + "SUM(CASE A.STATUS_ID WHEN 2 THEN 1 ELSE 0 END) AS GUBITNO\n"
                    + "FROM PROMET A\n"
                    + "INNER JOIN TIPSTER B ON B.ID=a.TIPSTER_ID\n";
            String where = "";
            //Where
            where = napraviWhereSQL();
            sql = sql + where;
            Statement stmt = Konekcija.konekcija.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            rs.first();
            jFormattedTextFieldSUlog.setValue(rs.getBigDecimal("ULOG"));
            jFormattedTextFieldSSaldo.setValue(rs.getBigDecimal("SALDO"));
            jFormattedTextFieldSROI.setValue(rs.getBigDecimal("ROI"));
            jFormattedTextFieldSOsvojeno.setValue(rs.getBigDecimal("OSVOJENO"));
            jFormattedTextFieldSTiketa.setValue(rs.getBigDecimal("TIKETA"));
            jFormattedTextFieldSDobitno.setValue(rs.getBigDecimal("DOBITNO"));
            jFormattedTextFieldSGubitno.setValue(rs.getBigDecimal("GUBITNO"));
            rs.close();
        } catch (SQLException ex) {
            Poruka.greska(rootPane, ex.getMessage());
        }

    }

    private String napraviWhereSQL() {
        String where = " where ";
        //Datum od do
        where = where + " A.DATUM BETWEEN " + Pomocna.TekstDatumUSQLDatum(jFormattedTextFieldDatumOd.getText()) + " AND "
                + Pomocna.TekstDatumUSQLDatum(jFormattedTextFieldDatumDo.getText());
        //Tipster
        if (!jTextFieldTipsterNaziv.getText().equals("")) {
            where = where + " AND A.TIPSTER_ID=" + jFormattedTextFieldTipster.getValue();
        }
        //Igram
        if (jComboBoxIgram.getSelectedIndex() != 2) {
            where = where + " AND A.IGRAM=" + jComboBoxIgram.getSelectedIndex();
        }
        where = where + " AND A.STATUS_ID IN(1,2)";
        return where;
    }
    private void jFormattedTextFieldDatumOdFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextFieldDatumOdFocusGained
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                jFormattedTextFieldDatumOd.selectAll();
            }
        });
    }//GEN-LAST:event_jFormattedTextFieldDatumOdFocusGained

    private void jFormattedTextFieldDatumOdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextFieldDatumOdKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            evt.consume();
            jFormattedTextFieldDatumOd.transferFocus();
        }
        Pomocna.navigacijaKrozMjesece((JFormattedTextField) evt.getSource(), evt, true);
    }//GEN-LAST:event_jFormattedTextFieldDatumOdKeyPressed

    private void jFormattedTextFieldDatumDoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextFieldDatumDoFocusGained
        // TODO add your handling code here:
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                jFormattedTextFieldDatumDo.selectAll();
            }
        });
    }//GEN-LAST:event_jFormattedTextFieldDatumDoFocusGained

    private void jFormattedTextFieldDatumDoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextFieldDatumDoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            evt.consume();
            jFormattedTextFieldDatumDo.transferFocus();
        }
        Pomocna.navigacijaKrozMjesece((JFormattedTextField) evt.getSource(), evt, false);
    }//GEN-LAST:event_jFormattedTextFieldDatumDoKeyPressed

    private void jFormattedTextFieldTipsterFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextFieldTipsterFocusGained
        // TODO add your handling code here:
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                jFormattedTextFieldTipster.selectAll();
            }
        });
    }//GEN-LAST:event_jFormattedTextFieldTipsterFocusGained

    private void jFormattedTextFieldTipsterPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jFormattedTextFieldTipsterPropertyChange
        if (evt.getPropertyName().equals("value")) {
            Tipster tipster = PomocnaBaza.getTipster(evt.getNewValue());
            jTextFieldTipsterNaziv.setText(tipster.getNaziv());
            //jCheckBoxIgram.setSelected(tipster.getIgram() != null && tipster.getIgram().equals("1"));
        }
    }//GEN-LAST:event_jFormattedTextFieldTipsterPropertyChange

    private void jFormattedTextFieldTipsterKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextFieldTipsterKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            evt.consume();
            jFormattedTextFieldTipster.transferFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_F5) {
            if (jFormattedTextFieldTipster.getValue() == null) {
                jFormattedTextFieldTipster.setValue(0);
            }
            Pomocna.idPozicioniranje = Integer.parseInt(jFormattedTextFieldTipster.getValue().toString());
            new TipsterPregled(this, true, true);
            jFormattedTextFieldTipster.setValue(Pomocna.idPozicioniranje);
        }

    }//GEN-LAST:event_jFormattedTextFieldTipsterKeyPressed

    private void jComboBoxIgramKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxIgramKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            evt.consume();
            jButtonOK.requestFocus();
        }
    }//GEN-LAST:event_jComboBoxIgramKeyPressed

    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed
        if ((jFormattedTextFieldTipster.getValue() != null && !jFormattedTextFieldTipster.getText().trim().equals("0")) && jTextFieldTipsterNaziv.getText().equals("")) {
            Poruka.greska(this, "Tipster ?");
            jFormattedTextFieldTipster.requestFocus();
            return;
        }

        try {
            napraviSelectSQL();
            tablica.refresh();
            totalSQL();
            postavkeTablica();
            tablica.selectCell(0, 0, true);
        } catch (SQLException ex) {
            Poruka.greska(this, ex.getMessage());
        }
    }//GEN-LAST:event_jButtonOKActionPerformed

    private void jButtonIzlazActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIzlazActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButtonIzlazActionPerformed

    private void jButtonListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListaActionPerformed
        String zaglavlje = "Rekapitulacija mjesec, Period: " + jFormattedTextFieldDatumOd.getText() + " do " + jFormattedTextFieldDatumDo.getText();
        if (jTextFieldTipsterNaziv.getText() != null && !jTextFieldTipsterNaziv.getText().equals("")) {
            zaglavlje = zaglavlje + ", Tipster: " + jTextFieldTipsterNaziv.getText();
        }
        zaglavlje = zaglavlje + ", Igram: " + jComboBoxIgram.getSelectedItem();
        Pomocna.redPozicioniranje = tablica.getSelectedRow();
        ExportUExcel.exportTabliceUExcel(zaglavlje, tablica, "Rekapitulacija_mjesec.xls", "2 3 6 7 8 9", "2 3");
        Pomocna.pozicioniranje(2, 0, tablica);
    }//GEN-LAST:event_jButtonListaActionPerformed

    private void jButtonDetaljActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDetaljActionPerformed
        try {
            // TODO add your handling code here:
            tablica.selectCell(tablica.getSelectedRow(), 0);
            String pocetakMjeseca = "01/" + tablica.getValueAt(tablica.getSelectedRow(), 0).toString();
            String krajMjeseca = Pomocna.formatDatuma.format(Pomocna.getKrajMjeseca(Pomocna.formatDatuma.parse(pocetakMjeseca)));
            new DetaljPrometPregled(this.getParent(), false, pocetakMjeseca, krajMjeseca, jFormattedTextFieldTipster.getValue(), jComboBoxIgram.getSelectedIndex());
        } catch (ParseException ex) {
            Poruka.greska(rootPane, ex.getMessage());

        }
    }//GEN-LAST:event_jButtonDetaljActionPerformed
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDetalj;
    private javax.swing.JButton jButtonIzlaz;
    private javax.swing.JButton jButtonLista;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JComboBox jComboBoxIgram;
    private javax.swing.JFormattedTextField jFormattedTextFieldDatumDo;
    private javax.swing.JFormattedTextField jFormattedTextFieldDatumOd;
    private javax.swing.JFormattedTextField jFormattedTextFieldSDobitno;
    private javax.swing.JFormattedTextField jFormattedTextFieldSGubitno;
    private javax.swing.JFormattedTextField jFormattedTextFieldSOsvojeno;
    private javax.swing.JFormattedTextField jFormattedTextFieldSROI;
    private javax.swing.JFormattedTextField jFormattedTextFieldSSaldo;
    private javax.swing.JFormattedTextField jFormattedTextFieldSTiketa;
    private javax.swing.JFormattedTextField jFormattedTextFieldSUlog;
    private javax.swing.JFormattedTextField jFormattedTextFieldTipster;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextFieldTipsterNaziv;
    private quick.dbtable.DBTable tablica;
    // End of variables declaration//GEN-END:variables
}
